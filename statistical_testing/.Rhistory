install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
data1 <- read.csv(file = "C:/Users/larak/Downloads/ames_housing.csv", header = T, stringsAsFactors = T)
gg1 <- ggplot(data = data1, aes(x = Gr_Liv_Area, y = Sale_Price)) +
geom_point(color = "tomato",
size = 2,
shape = 3) +
labs(title = "Grade Living Area versus Sale Price",
subtitle = "From the ames_housing dataset",
caption = "Scatterplot reflecting homes sold in Ames, Iowa between 2006 and 2010.",
x = "Above Grade Living Area (square feet)",
y = "Sale Price") +
theme(plot.title=element_text(color = "darkgreen"),
plot.subtitle=element_text(color = "dodgerblue"),
plot.caption=element_text(color = "dodgerblue"),
axis.title.x=element_text(color = "blue"),
axis.title.y=element_text(color = "blue")) +
geom_smooth(method = 'lm', se = FALSE)
print(gg1)
model <- lm(Sale_Price ~ Gr_Liv_Area, data = data1)
summary(model)
predictions <- predict(model, data.frame(Gr_Liv_Area = c(1465, 1839, 896)))
print(predictions)
residuals <- data.frame(Data = data1, Residuals = residuals(model))
residuals <- residuals[data1$Gr_Liv_Area %in% c(1465, 1839, 896),]
residuals %>% select(Data.Gr_Liv_Area, Residuals)
print(sum(residuals(model)^2)/(dim(data1)[1]-2))
anova(model)
data2 <- read.csv(file = "C:/Users/larak/Downloads/attrition.csv", header = T, stringsAsFactors = T)
sample_strata <- data2 %>%
initial_split(prop = 0.2, strata = Attrition) %>%
training()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
data1 <- read.csv(file = "C:/Users/larak/Downloads/ames_housing.csv", header = T, stringsAsFactors = T)
gg1 <- ggplot(data = data1, aes(x = Gr_Liv_Area, y = Sale_Price)) +
geom_point(color = "tomato",
size = 2,
shape = 3) +
labs(title = "Grade Living Area versus Sale Price",
subtitle = "From the ames_housing dataset",
caption = "Scatterplot reflecting homes sold in Ames, Iowa between 2006 and 2010.",
x = "Above Grade Living Area (square feet)",
y = "Sale Price") +
theme(plot.title=element_text(color = "darkgreen"),
plot.subtitle=element_text(color = "dodgerblue"),
plot.caption=element_text(color = "dodgerblue"),
axis.title.x=element_text(color = "blue"),
axis.title.y=element_text(color = "blue")) +
geom_smooth(method = 'lm', se = FALSE)
print(gg1)
model <- lm(Sale_Price ~ Gr_Liv_Area, data = data1)
summary(model)
predictions <- predict(model, data.frame(Gr_Liv_Area = c(1465, 1839, 896)))
print(predictions)
residuals <- data.frame(Data = data1, Residuals = residuals(model))
residuals <- residuals[data1$Gr_Liv_Area %in% c(1465, 1839, 896),]
residuals %>% select(Data.Gr_Liv_Area, Residuals)
print(sum(residuals(model)^2)/(dim(data1)[1]-2))
anova(model)
data2 <- read.csv(file = "C:/Users/larak/Downloads/attrition.csv", header = T, stringsAsFactors = T)
sample_strata <- data2 %>%
initial_split(prop = 0.2, strata = Attrition) %>%
training()
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(vctrs)
detach("package:vctrs", unload = TRUE)
library(vctrs)
install.packages(c("blob", "broom", "cachem", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "fastmap", "fontawesome", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "lme4", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "quantreg", "recipes", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun"))
install.packages(c("blob", "broom", "cachem", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "fastmap", "fontawesome", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "lme4", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "quantreg", "recipes", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun"))
install.packages(c("blob", "broom", "cachem", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "fastmap", "fontawesome", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "lme4", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "quantreg", "recipes", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun"))
install.packages(c("blob", "broom", "cachem", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "fastmap", "fontawesome", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "lme4", "markdown", "modelr", "openssl", "pillar", "processx", "ps", "quantreg", "recipes", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun"))
library(vctrs)
library(tidymodels)
library(caret)
Sonar <- read.csv(file = "sonar.csv",
header = T,
stringsAsFactors = TRUE)
Sonar <- read.csv(file = "C:/Users/larak/Downloads/sonar.csv",
header = T,
stringsAsFactors = TRUE)
set.seed(1)
data_split <- Sonar %>% initial_split(prop = 0.65, strata = Class)
unloadNamespace("vctrs")
library(tidymodels)
install.packages(vctrs)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(tidyverse)
library(caret)
library(tidymodels)
set.seed(1)
data_split <- Sonar %>% initial_split(prop = 0.65, strata = Class)
data_training <- data_split %>% training()
data_test <- data_split %>% testing()
library(caret)
library(caret)
library(tidymodels)
library(tidymodels)
library(caret)
library(tidyverse)
Sonar <- read.csv(file = "C:/Users/larak/Downloads/sonar.csv",
header = T,
stringsAsFactors = TRUE)
set.seed(1)
data_split <- Sonar %>% initial_split(prop = 0.65, strata = Class)
data_training <- data_split %>% training()
data_test <- data_split %>% testing()
library(tidymodels)
library(caret)
library(tidyverse)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(tidymodels)
install.packages("tibble")
install.packages("tibble")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(tidymodels)
